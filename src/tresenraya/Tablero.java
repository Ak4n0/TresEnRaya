package tresenraya;

import java.awt.Color;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author horabaixa
 */
public class Tablero extends javax.swing.JFrame {

    private final int DIMENSION = 3;
    private final Color COLOR;
    private boolean jugador;
    private int x, y;
    private int casillasMarcadas;
    private JLabel[][] figuras = new JLabel[DIMENSION][DIMENSION];
    private JPanel[][] casillas = new JPanel[DIMENSION][DIMENSION];
    private final Icon JUGADOR_1 = new ImageIcon("imagenes/O.png");
    private final Icon JUGADOR_2 = new ImageIcon("imagenes/X.png");
    
    /**
     * Creates new form Tablero
     */
    public Tablero() {
        initComponents();
        
        COLOR = new Color(255, 125, 125);
        figuras[0][0] = lblFig1;
        figuras[0][1] = lblFig2;
        figuras[0][2] = lblFig3;
        figuras[1][0] = lblFig4;
        figuras[1][1] = lblFig5;
        figuras[1][2] = lblFig6;
        figuras[2][0] = lblFig7;
        figuras[2][1] = lblFig8;
        figuras[2][2] = lblFig9;
        
        casillas[0][0] = casilla1;
        casillas[0][1] = casilla2;
        casillas[0][2] = casilla3;
        casillas[1][0] = casilla4;
        casillas[1][1] = casilla5;
        casillas[1][2] = casilla6;
        casillas[2][0] = casilla7;
        casillas[2][1] = casilla8;
        casillas[2][2] = casilla9;
        
        resetea();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        casilla1 = new javax.swing.JPanel();
        lblFig1 = new javax.swing.JLabel();
        casilla2 = new javax.swing.JPanel();
        lblFig2 = new javax.swing.JLabel();
        casilla3 = new javax.swing.JPanel();
        lblFig3 = new javax.swing.JLabel();
        casilla4 = new javax.swing.JPanel();
        lblFig4 = new javax.swing.JLabel();
        casilla5 = new javax.swing.JPanel();
        lblFig5 = new javax.swing.JLabel();
        casilla6 = new javax.swing.JPanel();
        lblFig6 = new javax.swing.JLabel();
        casilla7 = new javax.swing.JPanel();
        lblFig7 = new javax.swing.JLabel();
        casilla8 = new javax.swing.JPanel();
        lblFig8 = new javax.swing.JLabel();
        casilla9 = new javax.swing.JPanel();
        lblFig9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tres en raya");
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(300, 300));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(3, 3));

        casilla1.setBackground(new java.awt.Color(255, 255, 255));
        casilla1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla1MouseClicked(evt);
            }
        });
        casilla1.setLayout(new java.awt.BorderLayout());

        lblFig1.setBackground(new java.awt.Color(255, 255, 255));
        lblFig1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla1.add(lblFig1, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla1);

        casilla2.setBackground(new java.awt.Color(255, 255, 255));
        casilla2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla2MouseClicked(evt);
            }
        });
        casilla2.setLayout(new java.awt.BorderLayout());

        lblFig2.setBackground(new java.awt.Color(255, 255, 255));
        lblFig2.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla2.add(lblFig2, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla2);

        casilla3.setBackground(new java.awt.Color(255, 255, 255));
        casilla3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla3MouseClicked(evt);
            }
        });
        casilla3.setLayout(new java.awt.BorderLayout());

        lblFig3.setBackground(new java.awt.Color(255, 255, 255));
        lblFig3.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla3.add(lblFig3, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla3);

        casilla4.setBackground(new java.awt.Color(255, 255, 255));
        casilla4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla4MouseClicked(evt);
            }
        });
        casilla4.setLayout(new java.awt.BorderLayout());

        lblFig4.setBackground(new java.awt.Color(255, 255, 255));
        lblFig4.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla4.add(lblFig4, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla4);

        casilla5.setBackground(new java.awt.Color(255, 255, 255));
        casilla5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla5MouseClicked(evt);
            }
        });
        casilla5.setLayout(new java.awt.BorderLayout());

        lblFig5.setBackground(new java.awt.Color(255, 255, 255));
        lblFig5.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla5.add(lblFig5, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla5);

        casilla6.setBackground(new java.awt.Color(255, 255, 255));
        casilla6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla6MouseClicked(evt);
            }
        });
        casilla6.setLayout(new java.awt.BorderLayout());

        lblFig6.setBackground(new java.awt.Color(255, 255, 255));
        lblFig6.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla6.add(lblFig6, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla6);

        casilla7.setBackground(new java.awt.Color(255, 255, 255));
        casilla7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla7MouseClicked(evt);
            }
        });
        casilla7.setLayout(new java.awt.BorderLayout());

        lblFig7.setBackground(new java.awt.Color(255, 255, 255));
        lblFig7.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla7.add(lblFig7, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla7);

        casilla8.setBackground(new java.awt.Color(255, 255, 255));
        casilla8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla8MouseClicked(evt);
            }
        });
        casilla8.setLayout(new java.awt.BorderLayout());

        lblFig8.setBackground(new java.awt.Color(255, 255, 255));
        lblFig8.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla8.add(lblFig8, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla8);

        casilla9.setBackground(new java.awt.Color(255, 255, 255));
        casilla9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        casilla9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                casilla9MouseClicked(evt);
            }
        });
        casilla9.setLayout(new java.awt.BorderLayout());

        lblFig9.setBackground(new java.awt.Color(255, 255, 255));
        lblFig9.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lblFig9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        casilla9.add(lblFig9, java.awt.BorderLayout.CENTER);

        getContentPane().add(casilla9);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void casilla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla1MouseClicked
        y = 0;
        x = 0;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla1MouseClicked

    private void casilla2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla2MouseClicked
        y = 0;
        x = 1;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla2MouseClicked

    private void casilla3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla3MouseClicked
        y = 0;
        x = 2;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla3MouseClicked

    private void casilla4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla4MouseClicked
        y = 1;
        x = 0;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla4MouseClicked

    private void casilla5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla5MouseClicked
        y = 1;
        x = 1;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla5MouseClicked

    private void casilla6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla6MouseClicked
        y = 1;
        x = 2;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla6MouseClicked

    private void casilla7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla7MouseClicked
        y = 2;
        x = 0;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla7MouseClicked

    private void casilla8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla8MouseClicked
        y = 2;
        x = 1;
        if(figuras[y][x].getIcon() == null)
            jugada();
    }//GEN-LAST:event_casilla8MouseClicked

    private void casilla9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casilla9MouseClicked
        y = 2;
        x = 2;
        if(figuras[y][x].getIcon() == null)
            jugada();        
    }//GEN-LAST:event_casilla9MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero().setVisible(true);
            }
        });
    }
    
    /**
     * Realiza una jugada colocando la figura en la casilla del jugador en posesión del turno.
     */
    public void jugada() {
        figuras[y][x].setIcon(jugador? JUGADOR_1 : JUGADOR_2);
        
        jugador = !jugador;
        compruebaGanador();
    }
    
    // Informa del jugador que ha ganado la partida, si lo hay, o del empate en caso contrario
    public void huboGanador(boolean opcion) {
        if(opcion)
            JOptionPane.showMessageDialog(null, "Ganó el jugador " + (!jugador? 1 : 2), "Ganador", JOptionPane.PLAIN_MESSAGE);
        else
            JOptionPane.showMessageDialog(null, "No hubo ganador", "Empate", JOptionPane.PLAIN_MESSAGE);
        resetea();
    }
    
    /**
     * Comprueba si el jugador ha ganado la partida
     */
    public void compruebaGanador() {
        Icon valor = figuras[y][x].getIcon();
        int resultado;
        casillasMarcadas++;
        
        // Columna
        resultado = 0;
        for(int i = 0; i < figuras.length; ++i) {
            if(figuras[i][x].getIcon() != null && figuras[i][x].getIcon().equals(valor))
                resultado++;
        }
        
        if(resultado == figuras.length) {
            for(int i = 0; i < figuras.length; ++i) {
                casillas[i][x].setBackground(COLOR);
            }
            huboGanador(true);
            return;
        }
        
        // Fila
        resultado = 0;
        for(int i = 0; i < figuras.length; ++i) {
            if(figuras[y][i].getIcon() != null && figuras[y][i].getIcon().equals(valor))
                resultado++;
        }
        
        if(resultado == figuras.length) {
            for(int i = 0; i < figuras.length; ++i) {
                casillas[y][i].setBackground(COLOR);
            }
            huboGanador(true);
            return;
        }
        
        // Diagonal principal
        resultado = 0;
        for(int i = 0; i < figuras.length; ++i) {
            if(figuras[i][i].getIcon() != null && figuras[i][i].getIcon().equals(valor))
                resultado++;
        }
        
        if(resultado == figuras.length) {
            for(int i = 0; i < figuras.length; ++i) {
                casillas[i][i].setBackground(COLOR);
            }
            huboGanador(true);
            return;
        }
        
        // Diagonal inversa
        resultado = 0;
        for(int i = 0; i < figuras.length; ++i) {
            if(figuras[i][figuras.length-1-i].getIcon() != null && figuras[i][figuras.length-1-i].getIcon().equals(valor))
                resultado++;
        }
        
        if(resultado == figuras.length) {
            for(int i = 0; i < figuras.length; ++i) {
                casillas[i][figuras.length-1-i].setBackground(COLOR);
            }
            huboGanador(true);
            return;
        }
        
        if(casillasMarcadas == figuras.length * figuras.length) {
            huboGanador(false);
        }
            
    }
    
    private void resetea() {
        for(int i = 0; i < figuras.length; ++i)
            for(int j = 0; j < figuras[i].length; ++j) {
                figuras[i][j].setIcon(null);
                casillas[i][j].setBackground(Color.WHITE);
            }
        
        casillasMarcadas = 0;
        jugador = true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel casilla1;
    private javax.swing.JPanel casilla2;
    private javax.swing.JPanel casilla3;
    private javax.swing.JPanel casilla4;
    private javax.swing.JPanel casilla5;
    private javax.swing.JPanel casilla6;
    private javax.swing.JPanel casilla7;
    private javax.swing.JPanel casilla8;
    private javax.swing.JPanel casilla9;
    private javax.swing.JLabel lblFig1;
    private javax.swing.JLabel lblFig2;
    private javax.swing.JLabel lblFig3;
    private javax.swing.JLabel lblFig4;
    private javax.swing.JLabel lblFig5;
    private javax.swing.JLabel lblFig6;
    private javax.swing.JLabel lblFig7;
    private javax.swing.JLabel lblFig8;
    private javax.swing.JLabel lblFig9;
    // End of variables declaration//GEN-END:variables
}
